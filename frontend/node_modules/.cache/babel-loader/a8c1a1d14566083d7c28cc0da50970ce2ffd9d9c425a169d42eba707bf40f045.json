{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Axios instance oluştur\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 300000,\n  // 5 dakika timeout (OCR işlemleri uzun sürebilir)\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response.data, error => {\n  console.error('API Hatası:', error);\n  if (error.response) {\n    // Sunucudan gelen hata mesajı\n    throw new Error(error.response.data.error || error.response.data.message || 'Sunucu hatası');\n  } else if (error.request) {\n    // Network hatası\n    throw new Error('Sunucuya bağlanılamıyor. İnternet bağlantınızı kontrol edin.');\n  } else {\n    // Diğer hatalar\n    throw new Error('Beklenmeyen bir hata oluştu');\n  }\n});\n\n// API fonksiyonları\nexport const getLanguages = async () => {\n  return await api.get('/api/languages');\n};\nexport const checkHealth = async () => {\n  return await api.get('/api/health');\n};\nexport const processFiles = async (endpoint, formData, onProgress = null) => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  // Progress callback ekle\n  if (onProgress) {\n    config.onUploadProgress = progressEvent => {\n      const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n      onProgress(percentCompleted);\n    };\n  }\n  return await api.post(`/api/ocr/${endpoint}`, formData, config);\n};\nexport const processImage = async (formData, onProgress = null) => {\n  return await processFiles('image', formData, onProgress);\n};\nexport const processPDF = async (formData, onProgress = null) => {\n  return await processFiles('pdf', formData, onProgress);\n};\nexport const processBatch = async (formData, onProgress = null) => {\n  return await processFiles('batch', formData, onProgress);\n};\n\n// Görüntü işleme fonksiyonları\nexport const rotateImage = async (file, angle = 90) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  formData.append('angle', angle);\n  return await api.post('/api/image/rotate', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const cropImage = async (file, cropData) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  formData.append('x', cropData.x);\n  formData.append('y', cropData.y);\n  formData.append('width', cropData.width);\n  formData.append('height', cropData.height);\n  return await api.post('/api/image/crop', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const enhanceImage = async (file, enhancements = {}) => {\n  const formData = new FormData();\n  formData.append('image', file);\n\n  // Enhancement parametreleri\n  Object.keys(enhancements).forEach(key => {\n    formData.append(key, enhancements[key]);\n  });\n  return await api.post('/api/image/enhance', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\nexport const getImageInfo = async file => {\n  const formData = new FormData();\n  formData.append('image', file);\n  return await api.post('/api/image/info', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};\n\n// Dosya yardımcı fonksiyonları\nexport const downloadFile = (content, filename, type = 'text/plain') => {\n  const blob = new Blob([content], {\n    type\n  });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\nexport const formatFileSize = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\nexport const validateFile = file => {\n  const maxSize = 50 * 1024 * 1024; // 50MB\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp', 'image/tiff', 'application/pdf'];\n  if (file.size > maxSize) {\n    throw new Error(`Dosya boyutu çok büyük. Maksimum ${formatFileSize(maxSize)} olmalı.`);\n  }\n  if (!allowedTypes.includes(file.type)) {\n    throw new Error('Desteklenmeyen dosya türü. Lütfen görüntü veya PDF dosyası seçin.');\n  }\n  return true;\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","response","use","data","error","console","Error","message","request","getLanguages","get","checkHealth","processFiles","endpoint","formData","onProgress","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","post","processImage","processPDF","processBatch","rotateImage","file","angle","FormData","append","cropImage","cropData","x","y","width","height","enhanceImage","enhancements","Object","keys","forEach","key","getImageInfo","downloadFile","content","filename","type","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","validateFile","maxSize","allowedTypes","size","includes"],"sources":["/Users/mac/abyy-fine-reader/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Axios instance oluştur\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 300000, // 5 dakika timeout (OCR işlemleri uzun sürebilir)\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    console.error('API Hatası:', error);\n    \n    if (error.response) {\n      // Sunucudan gelen hata mesajı\n      throw new Error(error.response.data.error || error.response.data.message || 'Sunucu hatası');\n    } else if (error.request) {\n      // Network hatası\n      throw new Error('Sunucuya bağlanılamıyor. İnternet bağlantınızı kontrol edin.');\n    } else {\n      // Diğer hatalar\n      throw new Error('Beklenmeyen bir hata oluştu');\n    }\n  }\n);\n\n// API fonksiyonları\nexport const getLanguages = async () => {\n  return await api.get('/api/languages');\n};\n\nexport const checkHealth = async () => {\n  return await api.get('/api/health');\n};\n\nexport const processFiles = async (endpoint, formData, onProgress = null) => {\n  const config = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  };\n\n  // Progress callback ekle\n  if (onProgress) {\n    config.onUploadProgress = (progressEvent) => {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total\n      );\n      onProgress(percentCompleted);\n    };\n  }\n\n  return await api.post(`/api/ocr/${endpoint}`, formData, config);\n};\n\nexport const processImage = async (formData, onProgress = null) => {\n  return await processFiles('image', formData, onProgress);\n};\n\nexport const processPDF = async (formData, onProgress = null) => {\n  return await processFiles('pdf', formData, onProgress);\n};\n\nexport const processBatch = async (formData, onProgress = null) => {\n  return await processFiles('batch', formData, onProgress);\n};\n\n// Görüntü işleme fonksiyonları\nexport const rotateImage = async (file, angle = 90) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  formData.append('angle', angle);\n\n  return await api.post('/api/image/rotate', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n\nexport const cropImage = async (file, cropData) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  formData.append('x', cropData.x);\n  formData.append('y', cropData.y);\n  formData.append('width', cropData.width);\n  formData.append('height', cropData.height);\n\n  return await api.post('/api/image/crop', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n\nexport const enhanceImage = async (file, enhancements = {}) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  \n  // Enhancement parametreleri\n  Object.keys(enhancements).forEach(key => {\n    formData.append(key, enhancements[key]);\n  });\n\n  return await api.post('/api/image/enhance', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n\nexport const getImageInfo = async (file) => {\n  const formData = new FormData();\n  formData.append('image', file);\n\n  return await api.post('/api/image/info', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n\n// Dosya yardımcı fonksiyonları\nexport const downloadFile = (content, filename, type = 'text/plain') => {\n  const blob = new Blob([content], { type });\n  const url = window.URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  window.URL.revokeObjectURL(url);\n};\n\nexport const formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const validateFile = (file) => {\n  const maxSize = 50 * 1024 * 1024; // 50MB\n  const allowedTypes = [\n    'image/jpeg',\n    'image/jpg', \n    'image/png',\n    'image/gif',\n    'image/bmp',\n    'image/tiff',\n    'application/pdf'\n  ];\n\n  if (file.size > maxSize) {\n    throw new Error(`Dosya boyutu çok büyük. Maksimum ${formatFileSize(maxSize)} olmalı.`);\n  }\n\n  if (!allowedTypes.includes(file.type)) {\n    throw new Error('Desteklenmeyen dosya türü. Lütfen görüntü veya PDF dosyası seçin.');\n  }\n\n  return true;\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}